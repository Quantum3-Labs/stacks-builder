basePath: /api/v1
definitions:
  auth.APIKeyListItem:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_used_at:
        type: string
      name:
        type: string
      prefix:
        type: string
    type: object
  auth.CreateAPIKeyRequest:
    properties:
      name:
        type: string
    type: object
  auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@stackbuilder.com
    name: API Support
  description: Authentication and API Key Management for Stacks Builder
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Stacks Builder Authentication API
  version: "1.0"
paths:
  /auth/keys:
    get:
      consumes:
      - application/json
      description: Get all API keys for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: List of API keys
          schema:
            items:
              $ref: '#/definitions/auth.APIKeyListItem'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BasicAuth: []
      summary: List API keys
      tags:
      - API Keys
    post:
      consumes:
      - application/json
      description: Generate a new API key for the authenticated user
      parameters:
      - description: API key name (optional)
        in: body
        name: request
        schema:
          $ref: '#/definitions/auth.CreateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: API key created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BasicAuth: []
      summary: Create API key
      tags:
      - API Keys
  /auth/keys/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently revoke/delete an API key
      parameters:
      - description: API Key ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API key revoked successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BasicAuth: []
      summary: Revoke API key
      tags:
      - API Keys
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with default user role
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Authentication
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
